BEGIN;

DROP SCHEMA IF EXISTS migrated CASCADE;

CREATE SCHEMA migrated;

SET search_path TO migrated;

-- run the CREATE TABLE statements which were generated by generate_create_tables.py using SQLAlchemy
-- and stored in a separate file
\i create_tables.sql

-- Note: in the following data-copying statements, I am being explicit about all column names since I don't think
-- it's safe to assume the columns are in the same order in the new and old schemas, even in simple cases.
-- If you are adding to this list of tables, it may be helpful to know that you can get a comma-separated list of
-- column names for a table (e.g. DemandDrivers) by executing:
-- SELECT string_agg(column_name, ', ') AS cols FROM information_schema.columns WHERE table_schema='public' AND table_name='DemandDrivers';

-- copy system table data

INSERT INTO migrated."CleaningMethods" (id, name)
SELECT id, name FROM public."CleaningMethods";

INSERT INTO migrated."InputTypes" (id, name)
SELECT id, name FROM public."InputTypes";

INSERT INTO migrated."OtherIndexes" (id, name)
SELECT id, name FROM public."OtherIndexes";

-- copy geography table data

INSERT INTO migrated."Geographies" (id, name)
SELECT id, name FROM public."Geographies";

INSERT INTO migrated."GeographyMapKeys" (id, name)
SELECT id, name FROM public."GeographyMapKeys";

-- copy demand table data

INSERT INTO migrated."DemandDrivers" (
  id, name, base_driver_id, input_type_id, unit_prefix, unit_base, geography_id, other_index_1_id, other_index_2_id,
  geography_map_key_id, interpolation_method_id, extrapolation_method_id, extrapolation_growth
)
SELECT id, name, base_driver_id, input_type_id, unit_prefix, unit_base, geography_id, other_index_1_id,
  other_index_2_id, geography_map_key_id, interpolation_method_id, extrapolation_method_id, extrapolation_growth
FROM public."DemandDrivers";

INSERT INTO migrated."DemandDriversData" (parent_id, gau_id, oth_1_id, oth_2_id, year, value, id)
SELECT parent_id, gau_id, oth_1_id, oth_2_id, year, value, id FROM public."DemandDriversData";

COMMIT;