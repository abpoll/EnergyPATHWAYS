[database]
# the address of the computer your postgres server is running on; usually localhost
pg_host: localhost
# your postgres username
pg_user: postgres
# your postgres password, if required
pg_password: p@ssword
# the name of the pathways database you'd like to use
pg_database: pathways_us_2017-02-22

[case]
# the model outputs results starting in the current_year
current_year: 2015
# start_year informs the earliest year for which a stockrollover is run
demand_start_year: 2000
supply_start_year: 1950
# the model stops running after the end_year
end_year: 2050
# year_step is a future feature that will allow users to step through years in increments other than 1
year_step: 1
# this controls the number of years in between running the electricity dispatch on the supply side
dispatch_step: 1
# model timestep should be hourly. Future changes may allow other timesteps.
time_step: hour
# when mapping between geographies and no map key is otherwise specified, the default_geography_map_key is used
default_geography_map_key: Households 2010 (complete count)

# model primary_geography is the geographic resolution used to solve the model
primary_geography_id: 4
# keep only the primary_subsets (this can be a list of geographies) (id from table GeographiesData)
primary_subset_id:
# isolate a geography from the primary geography (can be a list)
breakout_geography_id:
# deals with gaus that are not a member of the input geography (for example, input geography is census division, but additional data is given for one state)
include_foreign_gaus: True

# model primary_geography is the geographic resolution used to solve the model
dispatch_geography_id: 1
# isolate a geography from the primary geography (can be a list)
dispatch_breakout_geography_id:

# this is the timezone used when producing dispatch outputs
dispatch_outputs_timezone_id = 126

# energy and mass units for outputs
calculation_energy_unit: mmBtu
mass_unit: megatonne

# currency name and year for outputs
currency_name: USD
currency_year_id: 2014

# inflation_rate is used for calculating levelized cost outputs
inflation_rate = .02

#determines whether certain model calculations take advantage of parallel processing capability
parallel_process = False
num_cores = 12

[output_detail]
# keep the level vintage in combined outputs
combined_vintage = False
# keep the level vintage in outputs from the demand side
demand_vintage = True
# keep the level vintage in outputs from the supply side
supply_vintage = True
# keep demand technologies as an index level in combined outputs
demand_technology = False
# keep the geography in combined outputs where energy and emissions are consumed. This is the default.
consumed_supply_geography = True
# keep the geography in combined outputs where energy and emissions are produced.
produced_supply_geography = False
# step size for writing 8760 dispatch outputs, this can be used to reduce output size. First and last year are automatically written.
dispatch_write_step = 10
# step size for writing the supply input output table for energy flows
io_table_write_step = 10

[opt]
# what solver should pyomo use for the electric dispatch? These will be tried in order.
generator_steps = 5
dispatch_solver: cplex, gurobi, cbc, glpk
stdout_detail = True
period_length = 438

[log]
# Available log levels are CRITICAL, ERROR, WARNING, INFO, or DEBUG.
log_level = INFO
# if True, print log to the command line.
stdout = True
